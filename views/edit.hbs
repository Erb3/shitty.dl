<!doctype html>
<html>
<head>
	<title>{{ name }}</title>
	
	<link href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.9/semantic.min.css" rel="stylesheet">

	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" >

	<style>
		body, html {
			width: 100%;
			min-height: 100vh;
			margin: 0;
			box-sizing: border-box;
			overflow: hidden;
		}

		#container {
			width: 100%;
			height: 100%;
			min-height: 100vh;
			border:1px solid grey;
		}
		
		#buttons {
			position: absolute;
			bottom: 15px;
			right: 15px;
		}
	</style>
</head>
<body>
<div id="container"></div>
<div id="buttons">
	<div class="ui mini icon button clickpopupactivator" data-position="left center"><i class="edit icon"></i>Save Changes</div>
	<div class="ui flowing popup transition hidden">
		<div class="ui mini labeled icon buttons">
			<div onclick="startEdit('{{nonce}}','{{name}}')" class="ui primary button"><i class="save icon"></i>Save</div>
			<div onclick="closePopups()" class="ui secondary button"><i class="window close icon"></i>Cancel</div>
		</div>
	</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.9/semantic.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.13.1/min/vs/loader.js"></script>
<script>
	require.config({ paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.13.1/min/vs' }});

	// Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites
	// the default worker url location (used when creating WebWorkers). The problem here is that
	// HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of
	// a web worker through a same-domain script
	window.MonacoEnvironment = {
		getWorkerUrl: function(workerId, label) {
		  return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
			self.MonacoEnvironment = {
			baseUrl: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.13.1/min/vs'
			};
			importScripts('https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.13.1/min/vs/base/worker/workerMain.js');`
		)}`;
		}
	};

	var editor
	require(['vs/editor/editor.main'], function() {
		editor = monaco.editor.create(document.getElementById('container'), {
			model: monaco.editor.createModel(atob("{{{base64 filecontents}}}"), null , monaco.Uri.parse("{{name}}") ),
			theme: 'vs-dark'
		});
	});
	
	window.onresize = function () {
		editor.layout();
	};
	
	function startEdit(nonce, name) {
		let file = btoa(editor.getValue());
		$('<form action="{{pathname}}edit" method="POST"/>')
		.append($(`<input type="hidden" name="nonce" value="${nonce}">`))
		.append($(`<input type="hidden" name="file" value= "${file}">`))
		.appendTo($(document.body))
		.submit();
	};
	
	function closePopups() {
		$('.clickpopupactivator').popup('hide');
	};
	
	$(function() {
		$(".clickpopupactivator").popup({
			inline: true,
			on: 'click'
		});
	});
</script>
</body>
</html>
